//
// Hero component
//

.hero {
  background-color: $brand-color;
	color: #fff;
	display: flex;
	height: 100%;
	flex-direction: column;
	flex-wrap: nowrap;
	width: 100%;
	overflow: hidden;

  position: fixed;
  z-index: 99999;
  top: 0;

  // reserve space in hero to always shows absolute nav when no flexgox
	.no-flexbox & {
	  min-height: pxToRem(80);
	}

  will-change: transform;
}

.hero__content {
  flex: 1;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  overflow: hidden;
}

.hero--hidden {
  height: auto;
  min-height: initial;
  .hero__caption,
  .hero__logo {
    display: none;
  }
}

.hero__logo {
  margin-top: 2rem;

  .js-loading & {
    will-change: transform;
    transform: translate3d(0, -160%, 0);
  }
  .js-loaded & {
    transition: transform 500ms $easeInQuint;
    transform: none;
  }
}

.hero__caption {
	font-weight: 600;
	font-size: modular-scale(1rem, 3);
  line-height: 1.2;

  margin-top: auto;
	margin-bottom: auto;
  .no-flexbox & {
  	margin-top: 1em;
  }

  display: none;
  @include if-taller-than(350px) {
    display: block;
  }

  @media (min-height: 600px) and (min-width: 450px) {
    font-size: modular-scale(1rem, 3);
    line-height: 1;
  }

  @media (min-height: 700px) and (min-width: 700px) {
    font-size: modular-scale(1rem, 4);
    line-height: 1;
  }

  @media (min-height: 940px) and (min-width: 1600px) {
		font-size: modular-scale(1.14rem, 4); // not following scale
		line-height: 1;
	}
}

.hero__text {
  max-width: 860px;
  display: inline-block;
}

.hero__nav {
  position: relative;
  z-index: 1000;
	background-color: #fff;
	height: pxToRem(80);
	line-height: pxToRem(80);
	font-size: modular-scale(1rem, 1);
  margin-top: 0;
  margin-bottom: 0;

  // anchor to bottom
  .no-flexbox & {
  	position: absolute;
  	bottom: 0;
  	left: 0;
  	right: 0;
  }
}



////////////////////////////////////////////
// NAV LOADING ANIMATION
////////////////////////////////////////////
.page-home .hero__nav {

  // load animation
  will-change: transform;

  // only run intro animation once
  .js-loading & {
    opacity: 0;
  }
  .js-loaded & {
    opacity: 1;
    animation-duration: 500ms;
    animation-timing-function: $easeOutQuint;
    animation-fill-mode: backwards;
  }
  // keep loading animation-name on other pages,
  // otherwise animation will restart when going back to home page
  .js-loaded.csstransforms & {
    animation-name: slide-up;
  }
  .js-loaded.csstransforms3d & {
    animation-name: slide-up-3d;
  }

  // don't run intro animtion after navigating using pjax
  .js-loaded.pjax & {
    animation-name: none;
  }
}



////////////////////////////////////////////
// Sticky header animation
////////////////////////////////////////////
@keyframes sticky-nav-show {
  from { transform: translateY(-100%); }
  to   { transform: none }
}
@keyframes sticky-nav-show3d {
  from { transform: translate3d(0, -100%, 0); }
  to   { transform: none }
}
@keyframes sticky-nav-hide {
  from { transform: none }
  to   { transform: translateY(-100%); }
}
@keyframes sticky-nav-hide3d {
  from { transform: none }
  to   { transform: translate3d(0, -100%, 0); }
}
.hero {
  will-change: transform;
  transition: none;

  // only animate nagivation if hero is hidden
  &.hero--hidden {
    &.sticky-nav--hidden {
      .csstransforms & {
        animation: sticky-nav-hide 350ms $easeOutQuad 1 forwards;
      }
      .csstransforms3d & {
        animation: sticky-nav-hide3d 350ms $easeOutQuad 1 forwards;
      }
    }
    &.sticky-nav--visible {
      .csstransforms & {
        animation: sticky-nav-show 400ms $easeOutQuad 1 none;
      }
      .csstransforms3d & {
        animation: sticky-nav-show3d 400ms $easeOutQuad 1 none;
      }
    }
  }
}

// In the wide grid we move the logo outside the inner grid
.hero__nav__wide-logo {
  position: absolute;
  top: 0;
  display: none;
  @include if-wider-than($breakpoint-three-px) {
    display: block;
  }
}

.hero--hidden {
	.hero__nav {
		border-bottom: 1px solid #f5f5f5;
	}
}

.hero__word {
	display: inline-block;
	position: relative;

	// This will "block" the view for the word
	// allowing the slide up effect to look nice
	&:after {
		background: $brand-color;
		content: '';
		display: block;
		position: absolute;
		top: 115%;
		left: 0;
		height: 110%;
		width: 110%;
	}
}

.hero__word__inner {
	display: inline-block;
  .js-loading & {
    opacity: 0;
    will-change: transform;
  }
  .js-loaded & {
    opacity: 1;
  	animation-duration: 500ms;
  	animation-timing-function: $easeOutQuint;
  	animation-fill-mode: backwards;
  }
  .js-loaded.csstransforms & {
      animation-name: slide-up;
  }
  .js-loaded.csstransforms3d & {
    animation-name: slide-up-3d;
  }
}
